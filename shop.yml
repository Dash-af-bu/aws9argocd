apiVersion: apps/v1
kind: Deployment
metadata: 
  name: aws9-deploy-shop-blue
  namespace: aws9c
spec:
  replicas: 1
  selector:
    matchLabels:
      color: blue    # (1)Pod 작성시 이 부분(label -> app: web)이 포함되어야 함
  template:   # 여기에서 부터 Pod 작성
    metadata:
      labels:
        color: blue  # 반드시 (1) 과 동일해야 함
    spec:
      containers:
        - name: aws9ctn-shop
          image: ljhoon597/aws9:shop
---
apiVersion: v1
kind: Service
metadata:
  name: aws9-svc-shop
  namespace: aws9c
spec:
  ports:
  - name: aws9-port-shop
    port: 80       # cluster-ip 의 포트 번호(type 없으면 기본은 cluster-ip )
    protocol: TCP
    targetPort: 80    # 컨테이너의 포트 
  selector:
    color: blue 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aws9-deploy-green
  namespace: aws9c
spec:
  replicas: 1
  selector:
    matchLabels:
      color: green    # (1)Pod 작성시 이 부분(label -> app: web)이 포함되어야 함
  template:   # 여기에서 부터 Pod 작성
    metadata:
      labels:
        color: green  # 반드시 (1) 과 동일해야 함
    spec:
      containers:
        - name: aws9ctn-green
          image: brian24/aws9:green
---
apiVersion: v1
kind: Service
metadata:
  name: aws9-svc-blog
  namespace: aws9c
spec:
  ports:
  - name: aws9-port-blog
    port: 80       # cluster-ip 의 포트 번호
    protocol: TCP
    targetPort: 80    # 컨테이너의 포트
  selector:
    color: green
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aws9-svc-news
  namespace: aws9c
spec:
  replicas: 1
  selector:
    matchLabels:
      color: yello    # (1)Pod 작성시 이 부분(label -> app: web)이 포함되어야 함
  template:   # 여기에서 부터 Pod 작성
    metadata:
      labels:
        color: yello  # 반드시 (1) 과 동일해야 함
    spec:
      containers:
        - name: aws9ctn-yello
          image: s2sqwe/aws9:yello
---
apiVersion: v1
kind: Service
metadata:
  name: aws9-svc-news
  namespace: aws9c
spec:
  ports:
  - name: aws9-port-news
    port: 80       # cluster-ip 의 포트 번호
    protocol: TCP
    targetPort: 80    # 컨테이너의 포트
  selector:
    color: yello
